{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport auth0 from '../lib/auth0';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\nimport Symptom from '../components/Symptom';\nimport symptoms from '../json/symptoms.json';\nimport '../styles/status.css';\nimport diagnostic from '../util/diagnostic';\nexport default function status({\n  user,\n  isAuth\n}) {\n  const {\n    0: coords,\n    1: setCoords\n  } = useState({\n    latitude: null,\n    longitude: null\n  });\n  const {\n    0: selectedSymptoms,\n    1: setSelectedSymptoms\n  } = useState([]);\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCoords({\n          latitude,\n          longitude\n        });\n      });\n    } else {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Seu navegador não possui suporte a geolocalização',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK'\n      });\n      Router.push('/');\n    }\n  }\n\n  function selectSymptom(symptom) {\n    if (selectedSymptoms.includes(symptom)) {\n      setSelectedSymptoms(selectedSymptoms.filter(item => item !== symptom));\n      return;\n    }\n\n    setSelectedSymptoms([...selectedSymptoms, symptom]);\n  } // userId\n\n\n  async function handleSave() {\n    const status = diagnostic(selectedSymptoms);\n    const response = await axios.post('/api/createStatus', {\n      symptoms: selectedSymptoms,\n      coords,\n      status\n    }, {\n      headers: {\n        userId: user.sub\n      }\n    });\n\n    if (response.status !== 200) {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Ocorreu um erro ao salvar suas informações. Tente novamente.',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK',\n        customClass: {\n          confirmButton: 'swal-confirm-button'\n        }\n      });\n    }\n\n    if (status === 'covid') {\n      Swal.fire({\n        title: 'Cuidado!',\n        text: 'Você possui uma grande chance de está contaminado. Procure um médico.',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK'\n      }).then(result => {\n        if (result.value) {\n          Router.push('/app');\n        }\n      });\n      return;\n    }\n\n    if (status === 'suspect') {\n      Swal.fire({\n        title: 'Gripe',\n        text: 'Você possui grande chance de está apenas gripado ou resfriado.',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK'\n      }).then(result => {\n        if (result.value) {\n          Router.push('/app');\n        }\n      });\n      return;\n    }\n\n    if (status === 'healthy') {\n      Swal.fire({\n        title: 'Saúdavel',\n        text: 'Aparentemente você está saúdavel. Tome todas as medidas de prevenção para continuar assim.',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK'\n      }).then(result => {\n        if (result.value) {\n          Router.push('/app');\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user\n    }), __jsx(\"div\", {\n      className: \"status-container\"\n    }, __jsx(\"div\", {\n      className: \"content\"\n    }, __jsx(\"div\", {\n      className: \"nurse-container\"\n    }, __jsx(\"img\", {\n      src: \"assets/icons/nurse.svg\",\n      alt: \"Nurse icon\"\n    }), __jsx(\"p\", null, \"Ol\\xE1 \", __jsx(\"b\", null, user.name), \", como voc\\xEA est\\xE1 se sentindo hoje? Selecione abaixo os sintomas que voc\\xEA esta sentindo. Caso n\\xE3o esteja apresentando nenhum, clique em continuar.\", ' ')), __jsx(\"div\", {\n      className: \"symptoms-container\"\n    }, symptoms.map(symptom => {\n      return __jsx(Symptom, {\n        key: symptom.value,\n        onClick: selectSymptom,\n        selected: selectedSymptoms.includes(symptom.name),\n        symptom: symptom\n      });\n    })), __jsx(\"div\", {\n      className: \"save-button-container\"\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: handleSave\n    }, \"Continuar\")))), __jsx(Footer, null));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\"\n  }, __jsx(Loading, null));\n}\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    req.user = session.user;\n    return {\n      props: {\n        isAuth: true,\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}