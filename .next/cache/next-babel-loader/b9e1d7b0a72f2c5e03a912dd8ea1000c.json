{"ast":null,"code":"import { db } from '../../lib/firebase';\nimport auth0 from '../../lib/auth0';\nimport getCurrentDate from '../../util/getCurrentDate';\nexport default async function (req, res) {\n  const {\n    filter,\n    latitude,\n    longitude\n  } = req.query;\n  const {\n    userId\n  } = req.headers;\n  /* Caso o usuário já tenha cadastrado seu status diário, será verificado\n   * todos os usúarios que estao proximos dele\n   */\n  // .where('status', '==', filter)\n\n  const nearbyUsers = await db.collection('history').doc('2020-04-20').collection('all').near({\n    center: {\n      latitude: parseFloat(latitude),\n      longitude: parseFloat(longitude)\n    },\n    radius: 10000\n  }).get();\n  const nearbyUsersList = [];\n  nearbyUsers.docs.forEach(doc => {\n    nearbyUsersList.push({\n      id: doc.id,\n      status: doc.data().status,\n      coordinates: {\n        latitude: doc.data().coordinates.latitude,\n        longitude: doc.data().coordinates.longitude\n      }\n    });\n  });\n  return res.status(200).json({\n    // user: session.user,\n    nearbyUsers: nearbyUsersList\n  });\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/api/nearby-users.js"],"names":["db","auth0","getCurrentDate","req","res","filter","latitude","longitude","query","userId","headers","nearbyUsers","collection","doc","near","center","parseFloat","radius","get","nearbyUsersList","docs","forEach","push","id","status","data","coordinates","json"],"mappings":"AAAA,SAASA,EAAT,QAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,eAAe,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACvC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAAkCJ,GAAG,CAACK,KAA5C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaN,GAAG,CAACO,OAAvB;AAEA;;;AAIA;;AAEA,QAAMC,WAAW,GAAG,MAAMX,EAAE,CACzBY,UADuB,CACZ,SADY,EAEvBC,GAFuB,CAEnB,YAFmB,EAGvBD,UAHuB,CAGZ,KAHY,EAIvBE,IAJuB,CAIlB;AACJC,IAAAA,MAAM,EAAE;AACNT,MAAAA,QAAQ,EAAEU,UAAU,CAACV,QAAD,CADd;AAENC,MAAAA,SAAS,EAAES,UAAU,CAACT,SAAD;AAFf,KADJ;AAKJU,IAAAA,MAAM,EAAE;AALJ,GAJkB,EAWvBC,GAXuB,EAA1B;AAaA,QAAMC,eAAe,GAAG,EAAxB;AAEAR,EAAAA,WAAW,CAACS,IAAZ,CAAiBC,OAAjB,CAA0BR,GAAD,IAAS;AAChCM,IAAAA,eAAe,CAACG,IAAhB,CAAqB;AACnBC,MAAAA,EAAE,EAAEV,GAAG,CAACU,EADW;AAEnBC,MAAAA,MAAM,EAAEX,GAAG,CAACY,IAAJ,GAAWD,MAFA;AAGnBE,MAAAA,WAAW,EAAE;AACXpB,QAAAA,QAAQ,EAAEO,GAAG,CAACY,IAAJ,GAAWC,WAAX,CAAuBpB,QADtB;AAEXC,QAAAA,SAAS,EAAEM,GAAG,CAACY,IAAJ,GAAWC,WAAX,CAAuBnB;AAFvB;AAHM,KAArB;AAQD,GATD;AAWA,SAAOH,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AAC1B;AACAhB,IAAAA,WAAW,EAAEQ;AAFa,GAArB,CAAP;AAID","sourcesContent":["import { db } from '../../lib/firebase';\nimport auth0 from '../../lib/auth0';\n\nimport getCurrentDate from '../../util/getCurrentDate';\n\nexport default async function (req, res) {\n  const { filter, latitude, longitude } = req.query;\n  const { userId } = req.headers;\n\n  /* Caso o usuário já tenha cadastrado seu status diário, será verificado\n   * todos os usúarios que estao proximos dele\n   */\n\n  // .where('status', '==', filter)\n\n  const nearbyUsers = await db\n    .collection('history')\n    .doc('2020-04-20')\n    .collection('all')\n    .near({\n      center: {\n        latitude: parseFloat(latitude),\n        longitude: parseFloat(longitude),\n      },\n      radius: 10000,\n    })\n    .get();\n\n  const nearbyUsersList = [];\n\n  nearbyUsers.docs.forEach((doc) => {\n    nearbyUsersList.push({\n      id: doc.id,\n      status: doc.data().status,\n      coordinates: {\n        latitude: doc.data().coordinates.latitude,\n        longitude: doc.data().coordinates.longitude,\n      },\n    });\n  });\n\n  return res.status(200).json({\n    // user: session.user,\n    nearbyUsers: nearbyUsersList,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}