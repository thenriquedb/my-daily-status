{"ast":null,"code":"import { db } from '../../lib/firebase';\nexport default async function (req, res) {\n  const {\n    filter = 'all',\n    radius = 1000,\n    latitude,\n    longitude\n  } = req.query;\n  let nearbyUsers;\n\n  switch (filter.toLowerCase()) {\n    case 'covid' || 'suspect':\n      nearbyUsers = await db.collection('history').doc('2020-04-20').collection('all').where('status', '==', filter).near({\n        center: {\n          latitude: parseFloat(latitude),\n          longitude: parseFloat(longitude)\n        },\n        radius\n      }).get();\n      break;\n\n    default:\n      nearbyUsers = await db.collection('history').doc('2020-04-20').collection('all').near({\n        center: {\n          latitude: parseFloat(latitude),\n          longitude: parseFloat(longitude)\n        },\n        radius\n      }).get();\n      break;\n  }\n\n  const nearbyUsersList = [];\n  nearbyUsers.docs.forEach(doc => {\n    nearbyUsersList.push({\n      id: doc.id,\n      status: doc.data().status,\n      coordinates: {\n        latitude: doc.data().coordinates.latitude,\n        longitude: doc.data().coordinates.longitude\n      }\n    });\n  });\n  return res.status(200).json({\n    nearbyUsers: nearbyUsersList\n  });\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/api/nearby-users.js"],"names":["db","req","res","filter","radius","latitude","longitude","query","nearbyUsers","toLowerCase","collection","doc","where","near","center","parseFloat","get","nearbyUsersList","docs","forEach","push","id","status","data","coordinates","json"],"mappings":"AAAA,SAASA,EAAT,QAAmB,oBAAnB;AAEA,eAAe,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACvC,QAAM;AAAEC,IAAAA,MAAM,GAAG,KAAX;AAAkBC,IAAAA,MAAM,GAAG,IAA3B;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA;AAA3C,MAAyDL,GAAG,CAACM,KAAnE;AAEA,MAAIC,WAAJ;;AAEA,UAAQL,MAAM,CAACM,WAAP,EAAR;AACE,SAAK,WAAW,SAAhB;AACED,MAAAA,WAAW,GAAG,MAAMR,EAAE,CACnBU,UADiB,CACN,SADM,EAEjBC,GAFiB,CAEb,YAFa,EAGjBD,UAHiB,CAGN,KAHM,EAIjBE,KAJiB,CAIX,QAJW,EAID,IAJC,EAIKT,MAJL,EAKjBU,IALiB,CAKZ;AACJC,QAAAA,MAAM,EAAE;AACNT,UAAAA,QAAQ,EAAEU,UAAU,CAACV,QAAD,CADd;AAENC,UAAAA,SAAS,EAAES,UAAU,CAACT,SAAD;AAFf,SADJ;AAKJF,QAAAA;AALI,OALY,EAYjBY,GAZiB,EAApB;AAaA;;AAEF;AACER,MAAAA,WAAW,GAAG,MAAMR,EAAE,CACnBU,UADiB,CACN,SADM,EAEjBC,GAFiB,CAEb,YAFa,EAGjBD,UAHiB,CAGN,KAHM,EAIjBG,IAJiB,CAIZ;AACJC,QAAAA,MAAM,EAAE;AACNT,UAAAA,QAAQ,EAAEU,UAAU,CAACV,QAAD,CADd;AAENC,UAAAA,SAAS,EAAES,UAAU,CAACT,SAAD;AAFf,SADJ;AAKJF,QAAAA;AALI,OAJY,EAWjBY,GAXiB,EAApB;AAYA;AA9BJ;;AAiCA,QAAMC,eAAe,GAAG,EAAxB;AAEAT,EAAAA,WAAW,CAACU,IAAZ,CAAiBC,OAAjB,CAA0BR,GAAD,IAAS;AAChCM,IAAAA,eAAe,CAACG,IAAhB,CAAqB;AACnBC,MAAAA,EAAE,EAAEV,GAAG,CAACU,EADW;AAEnBC,MAAAA,MAAM,EAAEX,GAAG,CAACY,IAAJ,GAAWD,MAFA;AAGnBE,MAAAA,WAAW,EAAE;AACXnB,QAAAA,QAAQ,EAAEM,GAAG,CAACY,IAAJ,GAAWC,WAAX,CAAuBnB,QADtB;AAEXC,QAAAA,SAAS,EAAEK,GAAG,CAACY,IAAJ,GAAWC,WAAX,CAAuBlB;AAFvB;AAHM,KAArB;AAQD,GATD;AAWA,SAAOJ,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AAC1BjB,IAAAA,WAAW,EAAES;AADa,GAArB,CAAP;AAGD","sourcesContent":["import { db } from '../../lib/firebase';\n\nexport default async function (req, res) {\n  const { filter = 'all', radius = 1000, latitude, longitude } = req.query;\n\n  let nearbyUsers;\n\n  switch (filter.toLowerCase()) {\n    case 'covid' || 'suspect':\n      nearbyUsers = await db\n        .collection('history')\n        .doc('2020-04-20')\n        .collection('all')\n        .where('status', '==', filter)\n        .near({\n          center: {\n            latitude: parseFloat(latitude),\n            longitude: parseFloat(longitude),\n          },\n          radius,\n        })\n        .get();\n      break;\n\n    default:\n      nearbyUsers = await db\n        .collection('history')\n        .doc('2020-04-20')\n        .collection('all')\n        .near({\n          center: {\n            latitude: parseFloat(latitude),\n            longitude: parseFloat(longitude),\n          },\n          radius,\n        })\n        .get();\n      break;\n  }\n\n  const nearbyUsersList = [];\n\n  nearbyUsers.docs.forEach((doc) => {\n    nearbyUsersList.push({\n      id: doc.id,\n      status: doc.data().status,\n      coordinates: {\n        latitude: doc.data().coordinates.latitude,\n        longitude: doc.data().coordinates.longitude,\n      },\n    });\n  });\n\n  return res.status(200).json({\n    nearbyUsers: nearbyUsersList,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}