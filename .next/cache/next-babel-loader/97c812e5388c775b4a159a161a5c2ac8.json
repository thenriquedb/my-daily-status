{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Map from '../components/Map';\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\nimport '../styles/app.css';\nexport default function App({\n  isAuth,\n  hasRegisteredDailyStatus,\n  user,\n  nearbyUsers = []\n}) {\n  const {\n    0: coords,\n    1: setCoords\n  } = useState({\n    latitude: null,\n    longitude: null\n  });\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCoords({\n          latitude,\n          longitude\n        });\n      });\n    } else {\n      alert('Seu navegador não possui suporte a geolocalização');\n      Router.push('/');\n    }\n  }\n\n  useEffect(async () => {\n    if (!isAuth) Router.push('/');\n    if (!hasRegisteredDailyStatus) Router.push('/status');\n    getUserLocation();\n    const response = await axios.get('/api/nearby-users', {\n      query: {\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        filter: 'all'\n      }\n    });\n  }, []);\n\n  if (isAuth && coords.latitude && coords.longitude) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, __jsx(Map, {\n      nearbyUsers: nearbyUsers,\n      user: user,\n      defaultCenter: {\n        lat: coords.latitude,\n        lng: coords.longitude\n      },\n      zoom: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = auth0.getSession(req);\n  console.log(session); // Verifica se o usuário está logado\n\n  if (!session) {\n    return {\n      props: {\n        isAuth: false\n      }\n    };\n  }\n  /*\n   * Verifica se o usuário já cadastrou seu status diario\n   */\n\n\n  const currentDate = getCurrentDate();\n  const userDailyStatus = await db.collection('users').doc(session.user.sub).collection('history').doc(currentDate).get();\n  const todayRegistered = userDailyStatus.data();\n\n  if (!todayRegistered) {\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredDailyStatus: false,\n        user: session.user\n      }\n    };\n  }\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js"],"names":["React","useState","useEffect","axios","Router","AppMenu","Loading","Map","auth0","getCurrentDate","db","App","isAuth","hasRegisteredDailyStatus","user","nearbyUsers","coords","setCoords","latitude","longitude","getUserLocation","navigator","geolocation","getCurrentPosition","position","alert","push","response","get","query","filter","lat","lng","getServerSideProps","req","res","session","getSession","console","log","props","currentDate","userDailyStatus","collection","doc","sub","todayRegistered","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Map from '../components/Map';\n\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\n\nimport '../styles/app.css';\n\nexport default function App({\n  isAuth,\n  hasRegisteredDailyStatus,\n  user,\n  nearbyUsers = [],\n}) {\n  const [coords, setCoords] = useState({ latitude: null, longitude: null });\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCoords({ latitude, longitude });\n      });\n    } else {\n      alert('Seu navegador não possui suporte a geolocalização');\n      Router.push('/');\n    }\n  }\n\n  useEffect(async () => {\n    if (!isAuth) Router.push('/');\n    if (!hasRegisteredDailyStatus) Router.push('/status');\n\n    getUserLocation();\n\n    const response = await axios.get('/api/nearby-users', {\n      query: {\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        filter: 'all',\n      },\n    });\n  }, []);\n\n  if (isAuth && coords.latitude && coords.longitude) {\n    return (\n      <>\n        <AppMenu user={user} />\n        <div className=\"app-container\">\n          <Map\n            nearbyUsers={nearbyUsers}\n            user={user}\n            defaultCenter={{\n              lat: coords.latitude,\n              lng: coords.longitude,\n            }}\n            zoom={13}\n          />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  const session = auth0.getSession(req);\n  console.log(session);\n  // Verifica se o usuário está logado\n  if (!session) {\n    return {\n      props: {\n        isAuth: false,\n      },\n    };\n  }\n\n  /*\n   * Verifica se o usuário já cadastrou seu status diario\n   */\n  const currentDate = getCurrentDate();\n\n  const userDailyStatus = await db\n    .collection('users')\n    .doc(session.user.sub)\n    .collection('history')\n    .doc(currentDate)\n    .get();\n\n  const todayRegistered = userDailyStatus.data();\n  if (!todayRegistered) {\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredDailyStatus: false,\n        user: session.user,\n      },\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}