{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Swal from 'sweetalert2';\nimport { FaCompass, FaSearch } from 'react-icons/fa';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Map from '../components/Map';\nimport VirusSvg from '../public/assets/icons/virus.svg';\nimport '../styles/app.css';\nexport var __N_SSP = true;\nexport default function App(_ref) {\n  var isAuth = _ref.isAuth,\n      hasRegisteredDailyStatus = _ref.hasRegisteredDailyStatus,\n      user = _ref.user;\n\n  var _useState = useState({\n    latitude: null,\n    longitude: null\n  }),\n      coords = _useState[0],\n      setCoords = _useState[1];\n\n  var _useState2 = useState(10),\n      radius = _useState2[0],\n      setRadius = _useState2[1];\n\n  var _useState3 = useState('all'),\n      filter = _useState3[0],\n      setFilter = _useState3[1];\n\n  var _useState4 = useState([]),\n      nearbyUsers = _useState4[0],\n      setNearbyUsers = _useState4[1];\n\n  function getUserLocation() {\n    if (!navigator.geolocation) {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Seu navegador não possui suporte a geolocalização. Utilize outro navegador para continuar utilizando o My Daily Status',\n        icon: 'error',\n        confirmButtonColor: '#961d66'\n      }).then(function (result) {\n        if (result) Router.push('/');\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(function (position) {\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      setCoords({\n        latitude: latitude,\n        longitude: longitude\n      });\n    }, function (err) {\n      console.log(err);\n    }, {\n      timeout: 10000\n    });\n  }\n\n  function getNearbUsers() {\n    var response, data;\n    return _regeneratorRuntime.async(function getNearbUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get('/api/nearby-users', {\n              params: {\n                latitude: parseFloat(coords.latitude),\n                longitude: parseFloat(coords.longitude),\n                filter: 'all',\n                radius: 15\n              },\n              headers: {\n                userId: user.sub\n              }\n            }));\n\n          case 2:\n            response = _context.sent;\n            data = response.data;\n            setNearbyUsers(data.nearbyUsers);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    if (!isAuth) {\n      Router.push('/');\n      return;\n    }\n\n    if (!hasRegisteredDailyStatus) {\n      Router.push('/status');\n      return;\n    }\n\n    getUserLocation();\n  }, []);\n  useEffect(function () {\n    if (coords.latitude && coords.longitude) getNearbUsers();\n  }, [coords]);\n\n  if (isAuth && coords.latitude && coords.longitude) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, __jsx(Map, {\n      nearbyUsers: nearbyUsers,\n      user: user,\n      defaultCenter: {\n        lat: coords.latitude,\n        lng: coords.longitude\n      },\n      zoom: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"filter-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"options-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, __jsx(FaCompass, {\n      color: \"#fff\",\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    })), __jsx(\"input\", {\n      type: \"number\",\n      placeholder: \"Raio de busca (KM)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"select-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, __jsx(VirusSvg, {\n      fill: \"#fff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    })), __jsx(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, __jsx(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, \"Todos as pessoas\"), __jsx(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, \"Covid\"))), __jsx(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        return alert('o');\n      },\n      className: \"search-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, __jsx(FaSearch, {\n      color: \"#fff\",\n      size: 18,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js"],"names":["React","useState","useEffect","axios","Router","Swal","FaCompass","FaSearch","AppMenu","Loading","Map","VirusSvg","App","isAuth","hasRegisteredDailyStatus","user","latitude","longitude","coords","setCoords","radius","setRadius","filter","setFilter","nearbyUsers","setNearbyUsers","getUserLocation","navigator","geolocation","fire","title","text","icon","confirmButtonColor","then","result","push","getCurrentPosition","position","err","console","log","timeout","getNearbUsers","get","params","parseFloat","headers","userId","sub","response","data","lat","lng","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Swal from 'sweetalert2';\nimport { FaCompass, FaSearch } from 'react-icons/fa';\n\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Map from '../components/Map';\nimport VirusSvg from '../public/assets/icons/virus.svg';\n\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\n\nimport '../styles/app.css';\n\nexport default function App({ isAuth, hasRegisteredDailyStatus, user }) {\n  const [coords, setCoords] = useState({ latitude: null, longitude: null });\n  const [radius, setRadius] = useState(10);\n  const [filter, setFilter] = useState('all');\n\n  const [nearbyUsers, setNearbyUsers] = useState([]);\n\n  function getUserLocation() {\n    if (!navigator.geolocation) {\n      Swal.fire({\n        title: 'Erro',\n        text:\n          'Seu navegador não possui suporte a geolocalização. Utilize outro navegador para continuar utilizando o My Daily Status',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n      }).then((result) => {\n        if (result) Router.push('/');\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        setCoords({ latitude, longitude });\n      },\n      (err) => {\n        console.log(err);\n      },\n      { timeout: 10000 }\n    );\n  }\n\n  async function getNearbUsers() {\n    const response = await axios.get('/api/nearby-users', {\n      params: {\n        latitude: parseFloat(coords.latitude),\n        longitude: parseFloat(coords.longitude),\n        filter: 'all',\n        radius: 15,\n      },\n      headers: {\n        userId: user.sub,\n      },\n    });\n\n    const { data } = response;\n    setNearbyUsers(data.nearbyUsers);\n  }\n\n  useEffect(() => {\n    if (!isAuth) {\n      Router.push('/');\n      return;\n    }\n    if (!hasRegisteredDailyStatus) {\n      Router.push('/status');\n      return;\n    }\n\n    getUserLocation();\n  }, []);\n\n  useEffect(() => {\n    if (coords.latitude && coords.longitude) getNearbUsers();\n  }, [coords]);\n\n  if (isAuth && coords.latitude && coords.longitude) {\n    return (\n      <>\n        <AppMenu user={user} />\n\n        <div className=\"app-container\">\n          <Map\n            nearbyUsers={nearbyUsers}\n            user={user}\n            defaultCenter={{\n              lat: coords.latitude,\n              lng: coords.longitude,\n            }}\n            zoom={13}\n          />\n\n          <div className=\"filter-bar\">\n            <div className=\"options-container\">\n              <div className=\"input-container\">\n                <div className=\"icon\">\n                  <FaCompass color=\"#fff\" size={24} />\n                </div>\n                <input type=\"number\" placeholder=\"Raio de busca (KM)\" />\n              </div>\n\n              <div className=\"select-container\">\n                <div className=\"icon\">\n                  <VirusSvg fill=\"#fff\" />\n                </div>\n                <select>\n                  <option>Todos as pessoas</option>\n                  <option>Covid</option>\n                </select>\n              </div>\n\n              <button\n                type=\"button\"\n                onClick={() => alert('o')}\n                className=\"search-button\"\n              >\n                <FaSearch color=\"#fff\" size={18} />\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  // Verifica se o usuário está logado\n  if (!session) {\n    return {\n      props: {\n        isAuth: false,\n      },\n    };\n  }\n\n  /*\n   * Verifica se o usuário já cadastrou seu status diario\n   */\n  const currentDate = getCurrentDate();\n\n  const userDailyStatus = await db\n    .collection('users')\n    .doc(session.user.sub)\n    .collection('history')\n    .doc(currentDate)\n    .get();\n\n  const todayRegistered = userDailyStatus.data();\n  if (!todayRegistered) {\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredDailyStatus: false,\n        user: session.user,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: true,\n      hasRegisteredDailyStatus: true,\n      user: session.user,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}