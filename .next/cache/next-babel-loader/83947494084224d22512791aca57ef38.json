{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\nimport '../styles/app.css';\nexport default function App({\n  isAuth,\n  hasRegisteredStatusToday,\n  user\n}) {\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n    if (!hasRegisteredStatusToday) Router.push('/status');\n  }, [isAuth]);\n\n  if (isAuth) {\n    return __jsx(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n} // Processa o que tem de processar no servidor e manda para a pagina\n// Funcina como uma API porém com tela\n\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    req.user = session.user;\n    const currentDate = getCurrentDate();\n    const todaysCheckin = await db.collection('markers').doc('currentDate').collection('checks').doc(session.user.sub).get();\n    const todayRegistered = todaysCheckin.data();\n    const hasRegisteredStatusToday = !!todayRegistered;\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredStatusToday,\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false\n    }\n  };\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js"],"names":["React","useEffect","Router","AppMenu","Loading","auth0","getCurrentDate","db","App","isAuth","hasRegisteredStatusToday","user","push","getServerSideProps","req","res","session","getSession","currentDate","todaysCheckin","collection","doc","sub","get","todayRegistered","data","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,EAAT,QAAmB,iBAAnB;AAEA,OAAO,mBAAP;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,wBAAV;AAAoCC,EAAAA;AAApC,CAAb,EAAyD;AACtEV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,MAAL,EAAaP,MAAM,CAACU,IAAP,CAAY,GAAZ;AACb,QAAI,CAACF,wBAAL,EAA+BR,MAAM,CAACU,IAAP,CAAY,SAAZ;AAChC,GAHQ,EAGN,CAACH,MAAD,CAHM,CAAT;;AAKA,MAAIA,MAAJ,EAAY;AACV,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAS,MAAA,IAAI,EAAEE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,C,CAED;AACA;;AACA,OAAO,eAAeE,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAgD;AACrD;AACA,QAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAIE,OAAJ,EAAa;AACXF,IAAAA,GAAG,CAACH,IAAJ,GAAWK,OAAO,CAACL,IAAnB;AACA,UAAMO,WAAW,GAAGZ,cAAc,EAAlC;AAEA,UAAMa,aAAa,GAAG,MAAMZ,EAAE,CAC3Ba,UADyB,CACd,SADc,EAEzBC,GAFyB,CAErB,aAFqB,EAGzBD,UAHyB,CAGd,QAHc,EAIzBC,GAJyB,CAIrBL,OAAO,CAACL,IAAR,CAAaW,GAJQ,EAKzBC,GALyB,EAA5B;AAOA,UAAMC,eAAe,GAAGL,aAAa,CAACM,IAAd,EAAxB;AACA,UAAMf,wBAAwB,GAAG,CAAC,CAACc,eAAnC;AAEA,WAAO;AACLE,MAAAA,KAAK,EAAE;AACLjB,QAAAA,MAAM,EAAE,IADH;AAELC,QAAAA,wBAFK;AAGLC,QAAAA,IAAI,EAAEK,OAAO,CAACL;AAHT;AADF,KAAP;AAOD;;AAED,SAAO;AACLe,IAAAA,KAAK,EAAE;AACLjB,MAAAA,MAAM,EAAE;AADH;AADF,GAAP;AAKD","sourcesContent":["import React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\n\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\n\nimport '../styles/app.css';\n\nexport default function App({ isAuth, hasRegisteredStatusToday, user }) {\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n    if (!hasRegisteredStatusToday) Router.push('/status');\n  }, [isAuth]);\n\n  if (isAuth) {\n    return (\n      <div className=\"app-container\">\n        <AppMenu user={user} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\n// Processa o que tem de processar no servidor e manda para a pagina\n// Funcina como uma API porém com tela\nexport async function getServerSideProps({ req, res }) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n  if (session) {\n    req.user = session.user;\n    const currentDate = getCurrentDate();\n\n    const todaysCheckin = await db\n      .collection('markers')\n      .doc('currentDate')\n      .collection('checks')\n      .doc(session.user.sub)\n      .get();\n\n    const todayRegistered = todaysCheckin.data();\n    const hasRegisteredStatusToday = !!todayRegistered;\n\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredStatusToday,\n        user: session.user,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}