{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react'; // import axios from 'axios';\n\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport '../styles/app.css';\n\nvar AnyReactComponent = function AnyReactComponent(_ref) {\n  var text = _ref.text;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 41\n    }\n  }, text);\n};\n\nexport var __N_SSP = true;\nexport default function App(_ref2) {\n  var isAuth = _ref2.isAuth,\n      hasRegisteredDailyStatus = _ref2.hasRegisteredDailyStatus,\n      user = _ref2.user,\n      _ref2$nearbyUsers = _ref2.nearbyUsers,\n      nearbyUsers = _ref2$nearbyUsers === void 0 ? [] : _ref2$nearbyUsers;\n\n  var _useState = useState({\n    latitude: null,\n    longitude: null\n  }),\n      coords = _useState[0],\n      setCoords = _useState[1];\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n        setCoords({\n          latitude: latitude,\n          longitude: longitude\n        });\n      });\n    } else {\n      alert('Seu navegador não possui suporte a geolocalização');\n      Router.push('/');\n    }\n  }\n\n  useEffect(function () {\n    if (!isAuth) Router.push('/');\n    if (!hasRegisteredDailyStatus) Router.push('/status');\n    getUserLocation(); // await axios.post('/api/user/')\n  }, [isAuth]);\n\n  if (isAuth) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), \"aaaaaa\", __jsx(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, __jsx(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyDc4CkmlXdS1_w2Pg9z32LifASGs_ryEFc asas' // key: process.env.GOOGLE_MAPS_KEY,\n\n      },\n      defaultCenter: {\n        lat: coords.latitude,\n        lng: coords.longitude\n      },\n      defaultZoom: 11,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js"],"names":["React","useState","useEffect","GoogleMapReact","Router","AppMenu","Loading","AnyReactComponent","text","App","isAuth","hasRegisteredDailyStatus","user","nearbyUsers","latitude","longitude","coords","setCoords","getUserLocation","navigator","geolocation","getCurrentPosition","position","alert","push","key","lat","lng"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAMA,OAAO,mBAAP;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CAAd;AAAA,CAA1B;;;AAEA,eAAe,SAASC,GAAT,QAKZ;AAAA,MAJDC,MAIC,SAJDA,MAIC;AAAA,MAHDC,wBAGC,SAHDA,wBAGC;AAAA,MAFDC,IAEC,SAFDA,IAEC;AAAA,gCADDC,WACC;AAAA,MADDA,WACC,kCADa,EACb;;AAAA,kBAC2BZ,QAAQ,CAAC;AAAEa,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,SAAS,EAAE;AAA7B,GAAD,CADnC;AAAA,MACMC,MADN;AAAA,MACcC,SADd;;AAGD,WAASC,eAAT,GAA2B;AACzB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AAAA,+BACrBA,QAAQ,CAACN,MADY;AAAA,YAC7CF,QAD6C,oBAC7CA,QAD6C;AAAA,YACnCC,SADmC,oBACnCA,SADmC;AAErDE,QAAAA,SAAS,CAAC;AAAEH,UAAAA,QAAQ,EAARA,QAAF;AAAYC,UAAAA,SAAS,EAATA;AAAZ,SAAD,CAAT;AACD,OAHD;AAID,KALD,MAKO;AACLQ,MAAAA,KAAK,CAAC,mDAAD,CAAL;AACAnB,MAAAA,MAAM,CAACoB,IAAP,CAAY,GAAZ;AACD;AACF;;AAEDtB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACQ,MAAL,EAAaN,MAAM,CAACoB,IAAP,CAAY,GAAZ;AACb,QAAI,CAACb,wBAAL,EAA+BP,MAAM,CAACoB,IAAP,CAAY,SAAZ;AAE/BN,IAAAA,eAAe,GAJD,CAMd;AACD,GAPQ,EAON,CAACR,MAAD,CAPM,CAAT;;AASA,MAAIA,MAAJ,EAAY;AACV,WACE,4BACE,MAAC,OAAD;AAAS,MAAA,IAAI,EAAEE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,YAGE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AACE,MAAA,gBAAgB,EAAE;AAChBa,QAAAA,GAAG,EAAE,8CADW,CAEhB;;AAFgB,OADpB;AAKE,MAAA,aAAa,EAAE;AACbC,QAAAA,GAAG,EAAEV,MAAM,CAACF,QADC;AAEba,QAAAA,GAAG,EAAEX,MAAM,CAACD;AAFC,OALjB;AASE,MAAA,WAAW,EAAE,EATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CADF;AAyBD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\n// import axios from 'axios';\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\n\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\n\nimport '../styles/app.css';\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nexport default function App({\n  isAuth,\n  hasRegisteredDailyStatus,\n  user,\n  nearbyUsers = [],\n}) {\n  const [coords, setCoords] = useState({ latitude: null, longitude: null });\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCoords({ latitude, longitude });\n      });\n    } else {\n      alert('Seu navegador não possui suporte a geolocalização');\n      Router.push('/');\n    }\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n    if (!hasRegisteredDailyStatus) Router.push('/status');\n\n    getUserLocation();\n\n    // await axios.post('/api/user/')\n  }, [isAuth]);\n\n  if (isAuth) {\n    return (\n      <>\n        <AppMenu user={user} />\n        aaaaaa\n        <div className=\"app-container\">\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: 'AIzaSyDc4CkmlXdS1_w2Pg9z32LifASGs_ryEFc asas',\n              // key: process.env.GOOGLE_MAPS_KEY,\n            }}\n            defaultCenter={{\n              lat: coords.latitude,\n              lng: coords.longitude,\n            }}\n            defaultZoom={11}\n          >\n            {/* <AnyReactComponent\n              lat={coords.latitude}\n              lng={coords.longitude}\n              text=\"eu\"\n            /> */}\n          </GoogleMapReact>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n\n  // Verifica se o usuário está logado\n  if (!session) {\n    return {\n      props: {\n        isAuth: false,\n      },\n    };\n  }\n\n  const currentDate = getCurrentDate();\n\n  const userDailyStatus = await db\n    .collection('users')\n    .doc(session.user.sub)\n    .collection('history')\n    .doc(currentDate)\n    .get();\n\n  const todayRegistered = userDailyStatus.data();\n\n  if (!todayRegistered) {\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredDailyStatus: false,\n        user: session.user,\n      },\n    };\n  }\n\n  // Caso o usuário já tenha cadastrado seu status diário, será verificado todos os\n  // usúarios que estao proximos dele\n  const { coordinates } = todayRegistered;\n\n  const nearbyUsers = await db\n    .collection('markers')\n    .doc(currentDate)\n    .collection('checks')\n    .near({\n      center: coordinates,\n      radius: 1000,\n    })\n    .get();\n\n  const nearbyUsersList = [];\n\n  nearbyUsers.docs.forEach((doc) => {\n    nearbyUsersList.push({\n      id: doc.id,\n      status: doc.data().status,\n      coordinates: {\n        longitude: doc.data().coordinates.longitude,\n        latitude: doc.data().coordinates.latitude,\n      },\n    });\n  });\n\n  return {\n    props: {\n      isAuth: true,\n      hasRegisteredDailyStatus: true,\n      user: session.user,\n      nearbyUsers: nearbyUsersList,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}