{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/status.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport auth0 from '../lib/auth0';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\nimport Symptom from '../components/Symptom';\nimport symptoms from '../json/symptoms.json';\nimport '../styles/status.css';\nexport default function status({\n  user,\n  isAuth\n}) {\n  const {\n    0: coords,\n    1: setCoords\n  } = useState({\n    latitude: null,\n    longitude: null\n  });\n  const {\n    0: status,\n    1: setStatus\n  } = useState('bem');\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCoords({\n          latitude,\n          longitude\n        });\n      });\n    } else {\n      alert('Seu navegador não possui suporte a geolocalização');\n      Router.push('/');\n    }\n  }\n\n  function onStatusChange(e) {\n    setStatus(e.target.value);\n  }\n\n  async function handleSave() {\n    const response = await axios.post('/api/status/store', {\n      status,\n      coords\n    });\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"status-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"nurse-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: \"assets/icons/nurse.svg\",\n      alt: \"Nurse icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"Como voc\\xEA est\\xE1 se sentindo hoje, Thiago Henrique Domingues? Selecione a baixo os sintomas que voc\\xEA esta sentindo. Caso n\\xE3o esteja apresentando nenhum, clique em continuar.\", ' ')))));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    req.user = session.user;\n    return {\n      props: {\n        isAuth: true,\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false\n    }\n  };\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/status.js"],"names":["React","useState","useEffect","Router","axios","auth0","AppMenu","Loading","Footer","Symptom","symptoms","status","user","isAuth","coords","setCoords","latitude","longitude","setStatus","getUserLocation","navigator","geolocation","getCurrentPosition","position","alert","push","onStatusChange","e","target","value","handleSave","response","post","getServerSideProps","req","res","session","getSession","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport auth0 from '../lib/auth0';\n\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\nimport Symptom from '../components/Symptom';\n\nimport symptoms from '../json/symptoms.json';\n\nimport '../styles/status.css';\n\nexport default function status({ user, isAuth }) {\n  const [coords, setCoords] = useState({ latitude: null, longitude: null });\n  const [status, setStatus] = useState('bem');\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCoords({ latitude, longitude });\n      });\n    } else {\n      alert('Seu navegador não possui suporte a geolocalização');\n      Router.push('/');\n    }\n  }\n\n  function onStatusChange(e) {\n    setStatus(e.target.value);\n  }\n\n  async function handleSave() {\n    const response = await axios.post('/api/status/store', {\n      status,\n      coords,\n    });\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return (\n      <>\n        <AppMenu user={user} />\n        <div className=\"status-container\">\n          <div className=\"content\">\n            <div className=\"nurse-container\">\n              <img src=\"assets/icons/nurse.svg\" alt=\"Nurse icon\" />\n              <p>\n                Como você está se sentindo hoje, Thiago Henrique Domingues?\n                Selecione a baixo os sintomas que você esta sentindo. Caso não\n                esteja apresentando nenhum, clique em continuar.{' '}\n              </p>\n            </div>\n\n            {/* <div>\n              {symptoms.map((symptom) => {\n                return <Symptom symptom={symptom} />;\n              })}\n            </div> */}\n          </div>\n        </div>\n        {/* <Footer /> */}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n  if (session) {\n    req.user = session.user;\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}