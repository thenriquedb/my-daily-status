{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/status.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\nimport Symptom from '../components/Symptom';\nimport symptoms from '../json/symptoms.json';\nimport '../styles/status.css';\nexport var __N_SSP = true;\nexport default function status(_ref) {\n  var _this = this;\n\n  var user = _ref.user,\n      isAuth = _ref.isAuth;\n\n  var _useState = useState({\n    latitude: null,\n    longitude: null\n  }),\n      coords = _useState[0],\n      setCoords = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedSymptoms = _useState2[0],\n      setSelectedSymptoms = _useState2[1];\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n        setCoords({\n          latitude: latitude,\n          longitude: longitude\n        });\n      });\n    } else {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Seu navegador não possui suporte a geolocalização',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK'\n      });\n      Router.push('/');\n    }\n  }\n\n  function selectSymptom(symptom) {\n    if (selectedSymptoms.includes(symptom)) {\n      setSelectedSymptoms(selectedSymptoms.filter(function (item) {\n        return item !== symptom;\n      }));\n      return;\n    }\n\n    setSelectedSymptoms([].concat(_toConsumableArray(selectedSymptoms), [symptom]));\n  }\n\n  function handleSave() {\n    var response;\n    return _regeneratorRuntime.async(function handleSave$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post('/api/status/store', {\n              symptoms: selectedSymptoms,\n              coords: coords\n            }));\n\n          case 2:\n            response = _context.sent;\n\n            if (!(response.status === 200)) {\n              _context.next = 6;\n              break;\n            }\n\n            Swal.fire({\n              title: 'Sucesso',\n              text: 'Seus sintomas foram salvos com sucesso!',\n              icon: 'success',\n              confirmButtonColor: '#961d66',\n              confirmButtonText: 'OK',\n              customClass: {\n                confirmButton: 'swal-confirm-button'\n              }\n            }).then(function (result) {\n              if (result.value) {}\n            });\n            return _context.abrupt(\"return\");\n\n          case 6:\n            Swal.fire({\n              title: 'Erro',\n              text: 'Ocorreu um erro ao salvar suas informações. Tente novamente.',\n              icon: 'error',\n              confirmButtonColor: '#961d66',\n              confirmButtonText: 'OK',\n              customClass: {\n                confirmButton: 'swal-confirm-button'\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    if (!isAuth) Router.push('/');\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"status-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"nurse-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: \"assets/icons/nurse.svg\",\n      alt: \"Nurse icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Ol\\xE1 \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, user.name), \", como voc\\xEA est\\xE1 se sentindo hoje? Selecione abaixo os sintomas que voc\\xEA esta sentindo. Caso n\\xE3o esteja apresentando nenhum, clique em continuar.\", ' ')), __jsx(\"div\", {\n      className: \"symptoms-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, symptoms.map(function (symptom) {\n      return __jsx(Symptom, {\n        key: symptom.value,\n        onClick: selectSymptom,\n        selected: selectedSymptoms.includes(symptom.value),\n        symptom: symptom,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      });\n    })), __jsx(\"div\", {\n      className: \"save-button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"Continuar\")))), __jsx(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/status.js"],"names":["React","useState","useEffect","Router","axios","Swal","AppMenu","Loading","Footer","Symptom","symptoms","status","user","isAuth","latitude","longitude","coords","setCoords","selectedSymptoms","setSelectedSymptoms","getUserLocation","navigator","geolocation","getCurrentPosition","position","fire","title","text","icon","confirmButtonColor","confirmButtonText","push","selectSymptom","symptom","includes","filter","item","handleSave","post","response","customClass","confirmButton","then","result","value","name","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nimport auth0 from '../lib/auth0';\n\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\nimport Symptom from '../components/Symptom';\n\nimport symptoms from '../json/symptoms.json';\n\nimport '../styles/status.css';\n\nexport default function status({ user, isAuth }) {\n  const [coords, setCoords] = useState({ latitude: null, longitude: null });\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCoords({ latitude, longitude });\n      });\n    } else {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Seu navegador não possui suporte a geolocalização',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK',\n      });\n\n      Router.push('/');\n    }\n  }\n\n  function selectSymptom(symptom) {\n    if (selectedSymptoms.includes(symptom)) {\n      setSelectedSymptoms(selectedSymptoms.filter((item) => item !== symptom));\n      return;\n    }\n\n    setSelectedSymptoms([...selectedSymptoms, symptom]);\n  }\n\n  async function handleSave() {\n    const response = await axios.post('/api/status/store', {\n      symptoms: selectedSymptoms,\n      coords,\n    });\n\n    if (response.status === 200) {\n      Swal.fire({\n        title: 'Sucesso',\n        text: 'Seus sintomas foram salvos com sucesso!',\n        icon: 'success',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK',\n        customClass: {\n          confirmButton: 'swal-confirm-button',\n        },\n      }).then((result) => {\n        if (result.value) {\n        }\n      });\n\n      return;\n    }\n\n    Swal.fire({\n      title: 'Erro',\n      text: 'Ocorreu um erro ao salvar suas informações. Tente novamente.',\n      icon: 'error',\n      confirmButtonColor: '#961d66',\n      confirmButtonText: 'OK',\n      customClass: {\n        confirmButton: 'swal-confirm-button',\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return (\n      <>\n        <AppMenu user={user} />\n\n        <div className=\"status-container\">\n          <div className=\"content\">\n            <div className=\"nurse-container\">\n              <img src=\"assets/icons/nurse.svg\" alt=\"Nurse icon\" />\n              <p>\n                Olá <b>{user.name}</b>, como você está se sentindo hoje?\n                Selecione abaixo os sintomas que você esta sentindo. Caso não\n                esteja apresentando nenhum, clique em continuar.{' '}\n              </p>\n            </div>\n\n            <div className=\"symptoms-container\">\n              {symptoms.map((symptom) => {\n                return (\n                  <Symptom\n                    key={symptom.value}\n                    onClick={selectSymptom}\n                    selected={selectedSymptoms.includes(symptom.value)}\n                    symptom={symptom}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"save-button-container\">\n              <button type=\"button\" onClick={handleSave}>\n                Continuar\n              </button>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n  if (session) {\n    req.user = session.user;\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}