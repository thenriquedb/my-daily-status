{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Dev/Projects/My-Dayly-Status/pages/profile.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport Head from 'next/head';\nimport format from 'date-fns/format';\nimport pt from 'date-fns/locale/pt-BR';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport auth0 from '../lib/auth0';\nimport { db } from '../lib/firebase';\nimport '../styles/profile.css';\nexport default function profile({\n  user,\n  history,\n  isAuth\n}) {\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n  }, [isAuth]);\n\n  if (isAuth) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"My Dayly Status | Perfil\"), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: \"My page title\",\n      key: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      className: \"profile-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: user.picture,\n      alt: \"User\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, user.name)), __jsx(\"div\", {\n      className: \"symptoms-history\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, \" Hist\\xF3rico \"), history.length > 0 && history.map(day => {\n      const dateFormated = format(new Date(day.date), 'dd-LLLL', {\n        locale: pt\n      });\n      return __jsx(\"div\", {\n        className: \"symptom-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"day-cirlce\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, dateFormated.split('-')[0]), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, dateFormated.split('-')[1], \" \")), __jsx(\"div\", {\n        className: \"symptoms\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, day.status === 'covid' && 'Covid', day.status === 'suspect' && 'Suspeito', day.status === 'healthy' && 'SaÃºdavel'), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \" \", day.symptoms.join(', '), \" \")));\n    })))));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    req.user = session.user;\n    const userId = session.user.sub;\n    const symptomsHistory = await db.collection('users').doc(userId).collection('history').get();\n    const historyList = [];\n\n    if (symptomsHistory.docs.length > 0) {\n      symptomsHistory.docs.map(item => {\n        historyList.push({\n          date: item.id,\n          status: item.data().status,\n          symptoms: item.data().symptoms\n        });\n      });\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        history: historyList\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false\n    }\n  };\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projects/My-Dayly-Status/pages/profile.js"],"names":["React","useEffect","Router","Head","format","pt","AppMenu","Loading","auth0","db","profile","user","history","isAuth","push","picture","name","length","map","day","dateFormated","Date","date","locale","split","status","symptoms","join","getServerSideProps","req","res","session","getSession","userId","sub","symptomsHistory","collection","doc","get","historyList","docs","item","id","data","props"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport Head from 'next/head';\n\nimport format from 'date-fns/format';\nimport pt from 'date-fns/locale/pt-BR';\n\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport auth0 from '../lib/auth0';\n\nimport { db } from '../lib/firebase';\n\nimport '../styles/profile.css';\n\nexport default function profile({ user, history, isAuth }) {\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n  }, [isAuth]);\n\n  if (isAuth) {\n    return (\n      <>\n        <AppMenu user={user} />\n\n        <Head>\n          <title>My Dayly Status | Perfil</title>\n          <meta property=\"og:title\" content=\"My page title\" key=\"title\" />\n        </Head>\n\n        <div className=\"profile-container\">\n          <div className=\"content\">\n            <div className=\"header\">\n              <img src={user.picture} alt=\"User\" />\n              <h1>{user.name}</h1>\n            </div>\n\n            <div className=\"symptoms-history\">\n              <h1> HistÃ³rico </h1>\n\n              {history.length > 0 &&\n                history.map((day) => {\n                  const dateFormated = format(new Date(day.date), 'dd-LLLL', {\n                    locale: pt,\n                  });\n\n                  return (\n                    <div className=\"symptom-card\">\n                      <div className=\"day-cirlce\">\n                        <b>{dateFormated.split('-')[0]}</b>\n                        <span>{dateFormated.split('-')[1]} </span>\n                      </div>\n\n                      <div className=\"symptoms\">\n                        <b>\n                          {day.status === 'covid' && 'Covid'}\n\n                          {day.status === 'suspect' && 'Suspeito'}\n\n                          {day.status === 'healthy' && 'SaÃºdavel'}\n                        </b>\n                        <p> {day.symptoms.join(', ')} </p>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    req.user = session.user;\n    const userId = session.user.sub;\n\n    const symptomsHistory = await db\n      .collection('users')\n      .doc(userId)\n      .collection('history')\n      .get();\n\n    const historyList = [];\n\n    if (symptomsHistory.docs.length > 0) {\n      symptomsHistory.docs.map((item) => {\n        historyList.push({\n          date: item.id,\n          status: item.data().status,\n          symptoms: item.data().symptoms,\n        });\n      });\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        history: historyList,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}