{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\nimport '../styles/app.css';\nexport default function App({\n  isAuth,\n  hasRegisteredDailyStatus,\n  user,\n  nearbyUsersList = []\n}) {\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n    if (!hasRegisteredDailyStatus) Router.push('/status'); // if (!nearbyUsersList)\n  }, [isAuth]);\n  console.log(nearbyUsersList);\n\n  if (isAuth) {\n    return __jsx(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req); // Verifica se o usuário está logado\n\n  if (!session) {\n    return {\n      props: {\n        isAuth: false\n      }\n    };\n  }\n\n  const currentDate = getCurrentDate();\n  const userDailyStatus = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n  const todayRegistered = userDailyStatus.data();\n\n  if (!todayRegistered) {\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredDailyStatus: false,\n        user: session.user\n      }\n    };\n  } // Caso o usuário já tenha cadastrado seu status diário, será verificado todos os\n  // usúarios que estao proximos dele\n\n\n  const {\n    coordinates\n  } = todayRegistered;\n  const nearbyUsers = await db.collection('markers').doc(currentDate).collection('checks').near({\n    center: coordinates,\n    radius: 1000\n  }).get();\n  nearbyUsers.forEach(doc => {\n    console.log(doc.data());\n    console.log(doc.id);\n  });\n  const nearbyUsersList = [];\n  nearbyUsers.docs.forEach(doc => {\n    nearbyUsersList.push({\n      id: doc.id,\n      status: doc.data().status,\n      coordinates: {\n        longitude: doc.data().coordinates.longitude,\n        latitude: doc.data().coordinates.latitude\n      }\n    });\n  });\n  return {\n    props: {\n      isAuth: true,\n      hasRegisteredDailyStatus: true,\n      user: session.user,\n      nearbyUsers: nearbyUsersList\n    }\n  };\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js"],"names":["React","useEffect","Router","AppMenu","Loading","auth0","getCurrentDate","db","App","isAuth","hasRegisteredDailyStatus","user","nearbyUsersList","push","console","log","getServerSideProps","req","res","session","getSession","props","currentDate","userDailyStatus","collection","doc","sub","get","todayRegistered","data","coordinates","nearbyUsers","near","center","radius","forEach","id","docs","status","longitude","latitude"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\n\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\n\nimport '../styles/app.css';\n\nexport default function App({\n  isAuth,\n  hasRegisteredDailyStatus,\n  user,\n  nearbyUsersList = [],\n}) {\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n    if (!hasRegisteredDailyStatus) Router.push('/status');\n    // if (!nearbyUsersList)\n  }, [isAuth]);\n  console.log(nearbyUsersList);\n  if (isAuth) {\n    return (\n      <div className=\"app-container\">\n        <AppMenu user={user} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n\n  // Verifica se o usuário está logado\n  if (!session) {\n    return {\n      props: {\n        isAuth: false,\n      },\n    };\n  }\n\n  const currentDate = getCurrentDate();\n\n  const userDailyStatus = await db\n    .collection('markers')\n    .doc(currentDate)\n    .collection('checks')\n    .doc(session.user.sub)\n    .get();\n\n  const todayRegistered = userDailyStatus.data();\n\n  if (!todayRegistered) {\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredDailyStatus: false,\n        user: session.user,\n      },\n    };\n  }\n  // Caso o usuário já tenha cadastrado seu status diário, será verificado todos os\n  // usúarios que estao proximos dele\n  const { coordinates } = todayRegistered;\n\n  const nearbyUsers = await db\n    .collection('markers')\n    .doc(currentDate)\n    .collection('checks')\n    .near({\n      center: coordinates,\n      radius: 1000,\n    })\n    .get();\n\n  nearbyUsers.forEach((doc) => {\n    console.log(doc.data());\n    console.log(doc.id);\n  });\n\n  const nearbyUsersList = [];\n  nearbyUsers.docs.forEach((doc) => {\n    nearbyUsersList.push({\n      id: doc.id,\n      status: doc.data().status,\n      coordinates: {\n        longitude: doc.data().coordinates.longitude,\n        latitude: doc.data().coordinates.latitude,\n      },\n    });\n  });\n\n  return {\n    props: {\n      isAuth: true,\n      hasRegisteredDailyStatus: true,\n      user: session.user,\n      nearbyUsers: nearbyUsersList,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}