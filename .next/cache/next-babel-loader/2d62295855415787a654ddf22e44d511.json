{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Dev/Projects/My-Dayly-Status/pages/status.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport auth0 from '../lib/auth0';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\nimport Symptom from '../components/Symptom';\nimport symptoms from '../json/symptoms.json';\nimport '../styles/status.css';\nimport diagnostic from '../util/diagnostic';\nexport default function status({\n  user,\n  isAuth\n}) {\n  const {\n    0: coords,\n    1: setCoords\n  } = useState({\n    latitude: null,\n    longitude: null\n  });\n  const {\n    0: selectedSymptoms,\n    1: setSelectedSymptoms\n  } = useState([]);\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCoords({\n          latitude,\n          longitude\n        });\n      });\n    } else {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Seu navegador não possui suporte a geolocalização',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK'\n      });\n      Router.push('/');\n    }\n  }\n\n  function selectSymptom(symptom) {\n    if (selectedSymptoms.includes(symptom)) {\n      setSelectedSymptoms(selectedSymptoms.filter(item => item !== symptom));\n      return;\n    }\n\n    setSelectedSymptoms([...selectedSymptoms, symptom]);\n  } // userId\n\n\n  async function handleSave() {\n    const status = diagnostic(selectedSymptoms);\n    const response = await axios.post('/api/createStatus', {\n      symptoms: selectedSymptoms,\n      coords,\n      status\n    }, {\n      headers: {\n        userId: user.sub\n      }\n    });\n\n    if (response.status !== 200) {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Ocorreu um erro ao salvar suas informações. Tente novamente.',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK',\n        customClass: {\n          confirmButton: 'swal-confirm-button'\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"status-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"nurse-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: \"assets/icons/nurse.svg\",\n      alt: \"Nurse icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, \"Ol\\xE1 \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, user.name), \", como voc\\xEA est\\xE1 se sentindo hoje? Selecione abaixo os sintomas que voc\\xEA esta sentindo. Caso n\\xE3o esteja apresentando nenhum, clique em continuar.\", ' ')), __jsx(\"div\", {\n      className: \"symptoms-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, symptoms.map(symptom => {\n      return __jsx(Symptom, {\n        key: symptom.value,\n        onClick: selectSymptom,\n        selected: selectedSymptoms.includes(symptom.name),\n        symptom: symptom,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      });\n    })), __jsx(\"div\", {\n      className: \"save-button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"Continuar\")))), __jsx(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    req.user = session.user;\n    return {\n      props: {\n        isAuth: true,\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false\n    }\n  };\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projects/My-Dayly-Status/pages/status.js"],"names":["React","useState","useEffect","Router","axios","Swal","auth0","AppMenu","Loading","Footer","Symptom","symptoms","diagnostic","status","user","isAuth","coords","setCoords","latitude","longitude","selectedSymptoms","setSelectedSymptoms","getUserLocation","navigator","geolocation","getCurrentPosition","position","fire","title","text","icon","confirmButtonColor","confirmButtonText","push","selectSymptom","symptom","includes","filter","item","handleSave","response","post","headers","userId","sub","customClass","confirmButton","name","map","value","getServerSideProps","req","res","session","getSession","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nimport auth0 from '../lib/auth0';\n\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\nimport Symptom from '../components/Symptom';\n\nimport symptoms from '../json/symptoms.json';\n\nimport '../styles/status.css';\nimport diagnostic from '../util/diagnostic';\n\nexport default function status({ user, isAuth }) {\n  const [coords, setCoords] = useState({ latitude: null, longitude: null });\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCoords({ latitude, longitude });\n      });\n    } else {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Seu navegador não possui suporte a geolocalização',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK',\n      });\n\n      Router.push('/');\n    }\n  }\n\n  function selectSymptom(symptom) {\n    if (selectedSymptoms.includes(symptom)) {\n      setSelectedSymptoms(selectedSymptoms.filter((item) => item !== symptom));\n      return;\n    }\n\n    setSelectedSymptoms([...selectedSymptoms, symptom]);\n  }\n  // userId\n\n  async function handleSave() {\n    const status = diagnostic(selectedSymptoms);\n\n    const response = await axios.post(\n      '/api/createStatus',\n      {\n        symptoms: selectedSymptoms,\n        coords,\n        status,\n      },\n      {\n        headers: {\n          userId: user.sub,\n        },\n      }\n    );\n\n    if (response.status !== 200) {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Ocorreu um erro ao salvar suas informações. Tente novamente.',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n        confirmButtonText: 'OK',\n        customClass: {\n          confirmButton: 'swal-confirm-button',\n        },\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return (\n      <>\n        <AppMenu user={user} />\n\n        <div className=\"status-container\">\n          <div className=\"content\">\n            <div className=\"nurse-container\">\n              <img src=\"assets/icons/nurse.svg\" alt=\"Nurse icon\" />\n              <p>\n                Olá <b>{user.name}</b>, como você está se sentindo hoje?\n                Selecione abaixo os sintomas que você esta sentindo. Caso não\n                esteja apresentando nenhum, clique em continuar.{' '}\n              </p>\n            </div>\n\n            <div className=\"symptoms-container\">\n              {symptoms.map((symptom) => {\n                return (\n                  <Symptom\n                    key={symptom.value}\n                    onClick={selectSymptom}\n                    selected={selectedSymptoms.includes(symptom.name)}\n                    symptom={symptom}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"save-button-container\">\n              <button type=\"button\" onClick={handleSave}>\n                Continuar\n              </button>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n  if (session) {\n    req.user = session.user;\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}