{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport './styles.css';\nexport default function AppMenu(_ref) {\n  var user = _ref.user,\n      handleLogout = _ref.handleLogout;\n  return function (handleLogout) {\n    var _useState = useState(false),\n        show = _useState[0],\n        setShow = _useState[1];\n\n    function showMenu() {\n      setShow(!show);\n    }\n\n    function handleLogout() {\n      return _handleLogout.apply(this, arguments);\n    }\n\n    function _handleLogout() {\n      _handleLogout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                Swal.fire({\n                  title: 'Deseja mesmo sair?',\n                  text: 'Certeza que vai nos deixar? :(',\n                  icon: 'info',\n                  showCancelButton: true,\n                  confirmButtonColor: '#961d66',\n                  confirmButtonText: 'Sim',\n                  cancelButtonText: 'NÃ£o',\n                  cancelButtonColor: '#ff5148',\n                  customClass: {\n                    confirmButton: 'swal-confirm-button'\n                  }\n                }).then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(result) {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!result.value) {\n                              _context.next = 9;\n                              break;\n                            }\n\n                            _context.prev = 1;\n                            _context.next = 4;\n                            return axios[\"delete\"]('/api/logout');\n\n                          case 4:\n                            _context.next = 9;\n                            break;\n\n                          case 6:\n                            _context.prev = 6;\n                            _context.t0 = _context[\"catch\"](1);\n                            Swal.fire({\n                              title: 'Erro',\n                              text: 'Ocorreu um erro ao realizar o logout. Tente novamente.',\n                              icon: 'error',\n                              confirmButtonColor: '#961d66',\n                              confirmButtonText: 'OK',\n                              customClass: {\n                                confirmButton: 'swal-confirm-button'\n                              }\n                            });\n\n                          case 9:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, null, [[1, 6]]);\n                  }));\n\n                  return function (_x) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _handleLogout.apply(this, arguments);\n    }\n\n    return __jsx(\"div\", {\n      className: \"app-menu \".concat(show && 'show')\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: showMenu\n    }, __jsx(\"img\", {\n      className: \"avatar\",\n      src: user.picture,\n      alt: \"Avatar\"\n    })), __jsx(\"div\", {\n      className: \"app-menu-options\"\n    }, __jsx(Link, {\n      href: \"/profile\"\n    }, __jsx(\"a\", null, __jsx(\"img\", {\n      className: \"avatar\",\n      src: user.picture,\n      alt: \"Avatar\"\n    }))), __jsx(\"p\", null, user.name), __jsx(\"button\", {\n      type: \"button\",\n      onClick: handleLogout\n    }, \"Sair\")));\n  }(handleLogout);\n}","map":null,"metadata":{},"sourceType":"module"}