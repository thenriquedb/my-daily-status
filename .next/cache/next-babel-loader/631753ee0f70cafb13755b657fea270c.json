{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport Head from 'next/head';\nimport format from 'date-fns/format';\nimport pt from 'date-fns/locale/pt-BR';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport auth0 from '../lib/auth0';\nimport { db } from '../lib/firebase';\nimport '../styles/profile.css';\nexport default function profile({\n  user,\n  history,\n  isAuth\n}) {\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n  }, [isAuth]);\n\n  if (isAuth) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user\n    }), __jsx(Head, null, __jsx(\"title\", null, \"My Dayly Status | Perfil\"), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: \"My page title\",\n      key: \"title\"\n    })), __jsx(\"div\", {\n      className: \"profile-container\"\n    }, __jsx(\"div\", {\n      className: \"content\"\n    }, __jsx(\"div\", {\n      className: \"header\"\n    }, __jsx(\"img\", {\n      src: user.picture,\n      alt: \"User\"\n    }), __jsx(\"h1\", null, user.name)), __jsx(\"div\", {\n      className: \"symptoms-history\"\n    }, __jsx(\"h1\", null, \" Hist\\xF3rico \"), history && history.map(day => {\n      const dateFormated = format(new Date(day.date), 'dd-LLLL', {\n        locale: pt\n      });\n      return __jsx(\"div\", {\n        className: \"symptom-card\"\n      }, __jsx(\"div\", {\n        className: \"day-cirlce\"\n      }, __jsx(\"b\", null, dateFormated.split('-')[0]), __jsx(\"span\", null, dateFormated.split('-')[1], \" \")), __jsx(\"div\", {\n        className: \"symptoms\"\n      }, __jsx(\"b\", null, day.status === 'covid' && 'Covid', day.status === 'suspect' && 'Suspeito', day.status === 'healthy' && 'SaÃºdavel'), __jsx(\"p\", null, \" \", day.symptoms.join(', '), \" \")));\n    })))));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\"\n  }, __jsx(Loading, null));\n}\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    req.user = session.user;\n    const userId = session.user.sub;\n    const symptomsHistory = await db.collection('users').doc(userId).collection('history').get();\n    const historyList = [];\n    console.log('symptomsHistory.docs.length : ', symptomsHistory.docs.length);\n\n    if (symptomsHistory.docs.length > 0) {\n      symptomsHistory.docs.map(item => {\n        historyList.push({\n          date: item.id,\n          status: item.data().status,\n          symptoms: item.data().symptoms\n        });\n      });\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        history: historyList\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}