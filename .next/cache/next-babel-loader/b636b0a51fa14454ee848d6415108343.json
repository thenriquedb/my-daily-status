{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Swal from 'sweetalert2';\nimport { FaCompass, FaSearch } from 'react-icons/fa';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Map from '../components/Map';\nimport VirusSvg from '../public/assets/icons/virus.svg';\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\nimport '../styles/app.css';\nexport default function App({\n  isAuth,\n  hasRegisteredDailyStatus,\n  user\n}) {\n  const {\n    0: coords,\n    1: setCoords\n  } = useState({\n    latitude: null,\n    longitude: null\n  });\n  const {\n    0: radius,\n    1: setRadius\n  } = useState(10);\n  const {\n    0: filter,\n    1: setFilter\n  } = useState('all');\n  const {\n    0: nearbyUsers,\n    1: setNearbyUsers\n  } = useState([]);\n\n  function getUserLocation() {\n    if (!navigator.geolocation) {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Seu navegador não possui suporte a geolocalização. Utilize outro navegador para continuar utilizando o My Daily Status',\n        icon: 'error',\n        confirmButtonColor: '#961d66'\n      }).then(result => {\n        if (result) Router.push('/');\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setCoords({\n        latitude,\n        longitude\n      });\n    }, err => {\n      Swal.fire({\n        title: 'Erro',\n        text: 'Erro ao tentar sua localização. Recarregue a pagina para tentar novamente.',\n        icon: 'error',\n        confirmButtonColor: '#961d66'\n      }).then(result => {\n        if (result) Router.push('/');\n      });\n    }, {\n      timeout: 10000\n    });\n  }\n\n  async function getNearbUsers() {\n    const response = await axios.get('/api/nearby-users', {\n      params: {\n        latitude: parseFloat(coords.latitude),\n        longitude: parseFloat(coords.longitude),\n        filter,\n        radius: parseFloat(radius)\n      },\n      headers: {\n        userId: user.sub\n      }\n    });\n    const {\n      data\n    } = response;\n    setNearbyUsers(data.nearbyUsers);\n  }\n\n  useEffect(() => {\n    if (!isAuth) {\n      Router.push('/');\n      return;\n    }\n\n    if (!hasRegisteredDailyStatus) {\n      Router.push('/status');\n      return;\n    }\n\n    getUserLocation();\n  }, []);\n  useEffect(() => {\n    if (coords.latitude && coords.longitude) getNearbUsers();\n  }, [coords]);\n\n  if (isAuth && coords.latitude && coords.longitude) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, __jsx(Map, {\n      nearbyUsers: nearbyUsers,\n      user: user,\n      defaultCenter: {\n        lat: coords.latitude,\n        lng: coords.longitude\n      },\n      zoom: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"filter-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, __jsx(FaCompass, {\n      color: \"#fff\",\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    })), __jsx(\"input\", {\n      value: radius,\n      type: \"number\",\n      onChange: e => setRadius(e.target.value),\n      placeholder: \"Raio de busca (KM)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"KM\")), __jsx(\"div\", {\n      className: \"select-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, __jsx(VirusSvg, {\n      fill: \"#fff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    })), __jsx(\"select\", {\n      onChange: e => setFilter(e.target.value),\n      value: filter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, __jsx(\"option\", {\n      value: \"covid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"Covid\"), __jsx(\"option\", {\n      value: \"suspect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, \"Suspeitos\"), __jsx(\"option\", {\n      value: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"Todos as pessoas\"))), __jsx(\"button\", {\n      type: \"button\",\n      onClick: () => getNearbUsers(),\n      className: \"search-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, __jsx(FaSearch, {\n      color: \"#fff\",\n      size: 18,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req); // Verifica se o usuário está logado\n\n  if (!session) {\n    return {\n      props: {\n        isAuth: false\n      }\n    };\n  }\n  /*\n   * Verifica se o usuário já cadastrou seu status diario\n   */\n\n\n  const currentDate = getCurrentDate();\n  const userDailyStatus = await db.collection('users').doc(session.user.sub).collection('history').doc(currentDate).get();\n  const todayRegistered = userDailyStatus.data();\n\n  if (!todayRegistered) {\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredDailyStatus: false,\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: true,\n      hasRegisteredDailyStatus: true,\n      user: session.user\n    }\n  };\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js"],"names":["React","useState","useEffect","axios","Router","Swal","FaCompass","FaSearch","AppMenu","Loading","Map","VirusSvg","auth0","getCurrentDate","db","App","isAuth","hasRegisteredDailyStatus","user","coords","setCoords","latitude","longitude","radius","setRadius","filter","setFilter","nearbyUsers","setNearbyUsers","getUserLocation","navigator","geolocation","fire","title","text","icon","confirmButtonColor","then","result","push","getCurrentPosition","position","err","timeout","getNearbUsers","response","get","params","parseFloat","headers","userId","sub","data","lat","lng","e","target","value","getServerSideProps","req","res","session","getSession","props","currentDate","userDailyStatus","collection","doc","todayRegistered"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Swal from 'sweetalert2';\nimport { FaCompass, FaSearch } from 'react-icons/fa';\n\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Map from '../components/Map';\nimport VirusSvg from '../public/assets/icons/virus.svg';\n\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\n\nimport '../styles/app.css';\n\nexport default function App({ isAuth, hasRegisteredDailyStatus, user }) {\n  const [coords, setCoords] = useState({ latitude: null, longitude: null });\n  const [radius, setRadius] = useState(10);\n  const [filter, setFilter] = useState('all');\n\n  const [nearbyUsers, setNearbyUsers] = useState([]);\n\n  function getUserLocation() {\n    if (!navigator.geolocation) {\n      Swal.fire({\n        title: 'Erro',\n        text:\n          'Seu navegador não possui suporte a geolocalização. Utilize outro navegador para continuar utilizando o My Daily Status',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n      }).then((result) => {\n        if (result) Router.push('/');\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        setCoords({ latitude, longitude });\n      },\n      (err) => {\n        Swal.fire({\n          title: 'Erro',\n          text:\n            'Erro ao tentar sua localização. Recarregue a pagina para tentar novamente.',\n          icon: 'error',\n          confirmButtonColor: '#961d66',\n        }).then((result) => {\n          if (result) Router.push('/');\n        });\n      },\n      { timeout: 10000 }\n    );\n  }\n\n  async function getNearbUsers() {\n    const response = await axios.get('/api/nearby-users', {\n      params: {\n        latitude: parseFloat(coords.latitude),\n        longitude: parseFloat(coords.longitude),\n        filter,\n        radius: parseFloat(radius),\n      },\n      headers: {\n        userId: user.sub,\n      },\n    });\n\n    const { data } = response;\n    setNearbyUsers(data.nearbyUsers);\n  }\n\n  useEffect(() => {\n    if (!isAuth) {\n      Router.push('/');\n      return;\n    }\n    if (!hasRegisteredDailyStatus) {\n      Router.push('/status');\n      return;\n    }\n\n    getUserLocation();\n  }, []);\n\n  useEffect(() => {\n    if (coords.latitude && coords.longitude) getNearbUsers();\n  }, [coords]);\n\n  if (isAuth && coords.latitude && coords.longitude) {\n    return (\n      <>\n        <AppMenu user={user} />\n\n        <div className=\"app-container\">\n          <Map\n            nearbyUsers={nearbyUsers}\n            user={user}\n            defaultCenter={{\n              lat: coords.latitude,\n              lng: coords.longitude,\n            }}\n            zoom={13}\n          />\n\n          <div className=\"filter-bar\">\n            <div className=\"input-container\">\n              <div className=\"icon\">\n                <FaCompass color=\"#fff\" size={24} />\n              </div>\n              <input\n                value={radius}\n                type=\"number\"\n                onChange={(e) => setRadius(e.target.value)}\n                placeholder=\"Raio de busca (KM)\"\n              />\n              <p>KM</p>\n            </div>\n\n            <div className=\"select-container\">\n              <div className=\"icon\">\n                <VirusSvg fill=\"#fff\" />\n              </div>\n\n              <select\n                onChange={(e) => setFilter(e.target.value)}\n                value={filter}\n              >\n                <option value=\"covid\">Covid</option>\n                <option value=\"suspect\">Suspeitos</option>\n                <option value=\"all\">Todos as pessoas</option>\n              </select>\n            </div>\n\n            <button\n              type=\"button\"\n              onClick={() => getNearbUsers()}\n              className=\"search-button\"\n            >\n              <FaSearch color=\"#fff\" size={18} />\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  // Verifica se o usuário está logado\n  if (!session) {\n    return {\n      props: {\n        isAuth: false,\n      },\n    };\n  }\n\n  /*\n   * Verifica se o usuário já cadastrou seu status diario\n   */\n  const currentDate = getCurrentDate();\n\n  const userDailyStatus = await db\n    .collection('users')\n    .doc(session.user.sub)\n    .collection('history')\n    .doc(currentDate)\n    .get();\n\n  const todayRegistered = userDailyStatus.data();\n  if (!todayRegistered) {\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredDailyStatus: false,\n        user: session.user,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: true,\n      hasRegisteredDailyStatus: true,\n      user: session.user,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}