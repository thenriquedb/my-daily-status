{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Map from '../components/Map';\nimport '../styles/app.css';\nexport var __N_SSP = true;\nexport default function App(_ref) {\n  var isAuth = _ref.isAuth,\n      hasRegisteredDailyStatus = _ref.hasRegisteredDailyStatus,\n      user = _ref.user;\n\n  var _useState = useState({\n    latitude: null,\n    longitude: null\n  }),\n      coords = _useState[0],\n      setCoords = _useState[1];\n\n  var _useState2 = useState([]),\n      nearbyUsers = _useState2[0],\n      setNearbyUsers = _useState2[1];\n\n  function getUserLocation() {\n    if (!navigator.geolocation) throw new Error('Your browser does not support geolocation.');\n    var promise = new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(function (pos) {\n        var lat = pos.coords.latitude;\n        var _long = pos.coords.longitude;\n        resolve({\n          lat: lat,\n          \"long\": _long\n        });\n      });\n    });\n    var userLocation = promise.then(function (value) {\n      console.log(value);\n      return {\n        latitude: value.lat,\n        longitude: value[\"long\"]\n      };\n    });\n    console.log(userLocation);\n  }\n\n  function getNearbUsers() {\n    var response, data;\n    return _regeneratorRuntime.async(function getNearbUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get('/api/nearby-users', {\n              query: {\n                latitude: coords.latitude,\n                longitude: coords.longitude,\n                filter: 'all'\n              },\n              headers: {\n                userId: user.sub\n              }\n            }));\n\n          case 2:\n            response = _context.sent;\n            data = response.data;\n            setNearbyUsers([1]);\n            console.log(data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    if (!isAuth) Router.push('/');\n    if (!hasRegisteredDailyStatus) Router.push('/status');\n    getUserLocation(); // console.log(coords);\n    // getNearbUsers();\n  }, []);\n\n  if (isAuth && coords.latitude && coords.longitude) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/app.js"],"names":["React","useState","useEffect","axios","Router","AppMenu","Loading","Map","App","isAuth","hasRegisteredDailyStatus","user","latitude","longitude","coords","setCoords","nearbyUsers","setNearbyUsers","getUserLocation","navigator","geolocation","Error","promise","Promise","resolve","reject","getCurrentPosition","pos","lat","long","userLocation","then","value","console","log","getNearbUsers","get","query","filter","headers","userId","sub","response","data","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Map from '../components/Map';\n\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\n\nimport '../styles/app.css';\n\nexport default function App({ isAuth, hasRegisteredDailyStatus, user }) {\n  const [coords, setCoords] = useState({ latitude: null, longitude: null });\n  const [nearbyUsers, setNearbyUsers] = useState([]);\n\n  function getUserLocation() {\n    if (!navigator.geolocation)\n      throw new Error('Your browser does not support geolocation.');\n\n    const promise = new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition((pos) => {\n        const lat = pos.coords.latitude;\n        const long = pos.coords.longitude;\n\n        resolve({ lat, long });\n      });\n    });\n\n    const userLocation = promise.then((value) => {\n      console.log(value);\n      return { latitude: value.lat, longitude: value.long };\n    });\n    console.log(userLocation);\n  }\n\n  async function getNearbUsers() {\n    const response = await axios.get('/api/nearby-users', {\n      query: {\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        filter: 'all',\n      },\n      headers: {\n        userId: user.sub,\n      },\n    });\n\n    const { data } = response;\n    setNearbyUsers([1]);\n    console.log(data);\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n    if (!hasRegisteredDailyStatus) Router.push('/status');\n\n    getUserLocation();\n    // console.log(coords);\n    // getNearbUsers();\n  }, []);\n\n  if (isAuth && coords.latitude && coords.longitude) {\n    return (\n      <>\n        <AppMenu user={user} />\n        <div className=\"app-container\">\n          {/* <Map\n            nearbyUsers={nearbyUsers}\n            user={user}\n            defaultCenter={{\n              lat: coords.latitude,\n              lng: coords.longitude,\n            }}\n            zoom={13}\n          /> */}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n\n  // Verifica se o usu치rio est치 logado\n  if (!session) {\n    return {\n      props: {\n        isAuth: false,\n      },\n    };\n  }\n\n  /*\n   * Verifica se o usu치rio j치 cadastrou seu status diario\n   */\n  const currentDate = getCurrentDate();\n\n  const userDailyStatus = await db\n    .collection('users')\n    .doc(session.user.sub)\n    .collection('history')\n    .doc(currentDate)\n    .get();\n\n  const todayRegistered = userDailyStatus.data();\n  if (!todayRegistered) {\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredDailyStatus: false,\n        user: session.user,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: true,\n      hasRegisteredDailyStatus: true,\n      user: session.user,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}