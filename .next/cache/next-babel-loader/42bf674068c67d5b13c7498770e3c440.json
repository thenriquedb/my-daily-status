{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/status.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport auth0 from '../lib/auth0';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport '../styles/status.css';\nexport default function status({\n  user,\n  isAuth\n}) {\n  const {\n    0: coords,\n    1: setCoords\n  } = useState([]);\n  const {\n    0: status,\n    1: setStatus\n  } = useState('bem');\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCoords([latitude, longitude]);\n      });\n    } else {\n      alert('Seu navegador não possui suporte a geolocalização');\n      Router.push('/');\n    }\n  }\n\n  function setUserStatus(e) {\n    setStatus(e.target.value);\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"status-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Como voc\\xEA est\\xE1 se sentindo hoje? \"), status, __jsx(\"div\", {\n      onChange: setUserStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      name: \"status\",\n      value: \"bem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }), __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \" Estou bem e sem sintomas \")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      name: \"status\",\n      value: \"gripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), \"Estou com sintomas de gripe / resfriado\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      name: \"status\",\n      value: \"covid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }), __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \" Estou com sintomas da covid \")))));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    req.user = session.user;\n    return {\n      props: {\n        isAuth: true,\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false\n    }\n  };\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/status.js"],"names":["React","useState","useEffect","Router","auth0","AppMenu","Loading","status","user","isAuth","coords","setCoords","setStatus","getUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","alert","push","setUserStatus","e","target","value","getServerSideProps","req","res","session","getSession","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport auth0 from '../lib/auth0';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport '../styles/status.css';\n\nexport default function status({ user, isAuth }) {\n  const [coords, setCoords] = useState([]);\n  const [status, setStatus] = useState('bem');\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCoords([latitude, longitude]);\n      });\n    } else {\n      alert('Seu navegador não possui suporte a geolocalização');\n      Router.push('/');\n    }\n  }\n\n  function setUserStatus(e) {\n    setStatus(e.target.value);\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return (\n      <>\n        <AppMenu user={user} />\n        <div className=\"status-container\">\n          <div className=\"content\">\n            <h1>Como você está se sentindo hoje? </h1>\n            {status}\n            <div onChange={setUserStatus}>\n              <input type=\"radio\" name=\"status\" value=\"bem\" />\n              <label> Estou bem e sem sintomas </label>\n            </div>\n\n            <div>\n              <label>\n                <input type=\"radio\" name=\"status\" value=\"gripe\" />\n                Estou com sintomas de gripe / resfriado\n              </label>\n            </div>\n\n            <div>\n              <input type=\"radio\" name=\"status\" value=\"covid\" />\n              <label> Estou com sintomas da covid </label>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n  if (session) {\n    req.user = session.user;\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}