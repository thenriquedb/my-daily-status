{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/status.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport '../styles/status.css';\nexport var __N_SSP = true;\nexport default function status(_ref) {\n  var user = _ref.user,\n      isAuth = _ref.isAuth;\n\n  var _useState = useState([]),\n      coords = _useState[0],\n      setCoords = _useState[1];\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n        setCoords([latitude, longitude]);\n      });\n    } else {\n      alert('Seu navegador não possui suporte a geolocalização');\n    }\n  }\n\n  useEffect(function () {\n    if (!isAuth) Router.push('/');\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return __jsx(React.Fragment, null, __jsx(AppMenu, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"status-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Como voc\\xEA est\\xE1 se sentindo hoje? \"), __jsx(\"button\", {\n      type: \"button\",\n      onClick: getUserLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Pegue minha posi\\xE7\\xE3o\"), __jsx(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, \" Estou bem e sem sintomas \"), __jsx(\"input\", {\n      type: \"radio\",\n      name: \"status\",\n      value: \"bem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }), __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \" Estou com sintomas de gripe \"), __jsx(\"input\", {\n      type: \"radio\",\n      name: \"status\",\n      value: \"gripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }), __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, \" Estou com sintomas da covid \"), __jsx(\"input\", {\n      type: \"radio\",\n      name: \"status\",\n      value: \"covid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n  return __jsx(\"div\", {\n    className: \"center-content fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Dev/Projetos/fullstack-lab/pages/status.js"],"names":["React","useState","useEffect","Router","AppMenu","Loading","status","user","isAuth","coords","setCoords","getUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","alert","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,sBAAP;;AAEA,eAAe,SAASC,MAAT,OAAkC;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AAAA,kBACnBP,QAAQ,CAAC,EAAD,CADW;AAAA,MACxCQ,MADwC;AAAA,MAChCC,SADgC;;AAG/C,WAASC,eAAT,GAA2B;AACzB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AAAA,+BACrBA,QAAQ,CAACN,MADY;AAAA,YAC7CO,QAD6C,oBAC7CA,QAD6C;AAAA,YACnCC,SADmC,oBACnCA,SADmC;AAErDP,QAAAA,SAAS,CAAC,CAACM,QAAD,EAAWC,SAAX,CAAD,CAAT;AACD,OAHD;AAID,KALD,MAKO;AACLC,MAAAA,KAAK,CAAC,mDAAD,CAAL;AACD;AACF;;AAEDhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACM,MAAL,EAAaL,MAAM,CAACgB,IAAP,CAAY,GAAZ;AAEbR,IAAAA,eAAe;AAChB,GAJQ,EAIN,CAACH,MAAD,CAJM,CAAT;;AAMA,MAAIA,MAAJ,EAAY;AACV,WACE,4BACE,MAAC,OAAD;AAAS,MAAA,IAAI,EAAED,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,EAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEI,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,QAAzB;AAAkC,MAAA,KAAK,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAJF,EAKE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,QAAzB;AAAkC,MAAA,KAAK,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAPF,EAQE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,QAAzB;AAAkC,MAAA,KAAK,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CANF,CADF,CAFF,CADF;AAwBD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport auth0 from '../lib/auth0';\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport '../styles/status.css';\n\nexport default function status({ user, isAuth }) {\n  const [coords, setCoords] = useState([]);\n\n  function getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCoords([latitude, longitude]);\n      });\n    } else {\n      alert('Seu navegador não possui suporte a geolocalização');\n    }\n  }\n\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n\n    getUserLocation();\n  }, [isAuth]);\n\n  if (isAuth) {\n    return (\n      <>\n        <AppMenu user={user} />\n        <div className=\"status-container\">\n          <div className=\"content\">\n            <h1>Como você está se sentindo hoje? </h1>\n            <button type=\"button\" onClick={getUserLocation}>\n              Pegue minha posição\n            </button>\n\n            <form>\n              <label> Estou bem e sem sintomas </label>\n              <input type=\"radio\" name=\"status\" value=\"bem\" />\n\n              <label> Estou com sintomas de gripe </label>\n              <input type=\"radio\" name=\"status\" value=\"gripe\" />\n\n              <label> Estou com sintomas da covid </label>\n              <input type=\"radio\" name=\"status\" value=\"covid\" />\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  // pega o cookie da sessão do usuario\n  const session = await auth0.getSession(req);\n  if (session) {\n    req.user = session.user;\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}