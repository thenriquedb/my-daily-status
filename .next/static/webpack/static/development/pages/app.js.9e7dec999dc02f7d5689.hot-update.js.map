{"version":3,"file":"static/webpack/static/development/pages/app.js.9e7dec999dc02f7d5689.hot-update.js","sources":["webpack:///./pages/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Swal from 'sweetalert2';\nimport { FaCompass, FaSearch } from 'react-icons/fa';\n\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport Map from '../components/Map';\nimport VirusSvg from '../public/assets/icons/virus.svg';\n\nimport auth0 from '../lib/auth0';\nimport getCurrentDate from '../util/getCurrentDate';\nimport { db } from '../lib/firebase';\n\nimport '../styles/app.css';\n\nexport default function App({ isAuth, hasRegisteredDailyStatus, user }) {\n  const [coords, setCoords] = useState({ latitude: null, longitude: null });\n  const [radius, setRadius] = useState(10);\n  const [filter, setFilter] = useState('all');\n\n  const [nearbyUsers, setNearbyUsers] = useState([]);\n\n  function getUserLocation() {\n    if (!navigator.geolocation) {\n      Swal.fire({\n        title: 'Erro',\n        text:\n          'Seu navegador não possui suporte a geolocalização. Utilize outro navegador para continuar utilizando o My Daily Status',\n        icon: 'error',\n        confirmButtonColor: '#961d66',\n      }).then((result) => {\n        if (result) Router.push('/');\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        setCoords({ latitude, longitude });\n      },\n      (err) => {\n        console.log(err);\n      },\n      { timeout: 10000 }\n    );\n  }\n\n  async function getNearbUsers() {\n    const response = await axios.get('/api/nearby-users', {\n      params: {\n        latitude: parseFloat(coords.latitude),\n        longitude: parseFloat(coords.longitude),\n        filter,\n        radius: parseFloat(radius) * 1000,\n      },\n      headers: {\n        userId: user.sub,\n      },\n    });\n\n    const { data } = response;\n    setNearbyUsers(data.nearbyUsers);\n  }\n\n  useEffect(() => {\n    if (!isAuth) {\n      Router.push('/');\n      return;\n    }\n    if (!hasRegisteredDailyStatus) {\n      Router.push('/status');\n      return;\n    }\n\n    getUserLocation();\n  }, []);\n\n  useEffect(() => {\n    if (coords.latitude && coords.longitude) getNearbUsers();\n  }, [coords]);\n\n  if (isAuth && coords.latitude && coords.longitude) {\n    return (\n      <>\n        <AppMenu user={user} />\n\n        <div className=\"app-container\">\n          <Map\n            nearbyUsers={nearbyUsers}\n            user={user}\n            defaultCenter={{\n              lat: coords.latitude,\n              lng: coords.longitude,\n            }}\n            zoom={13}\n          />\n\n          <div className=\"filter-bar\">\n            {radius}\n            <div className=\"input-container\">\n              <div className=\"icon\">\n                <FaCompass color=\"#fff\" size={24} />\n              </div>\n              <input\n                value={radius}\n                type=\"number\"\n                onChange={(e) => setRadius(e.target.value)}\n                placeholder=\"Raio de busca (KM)\"\n              />\n              <p>KM</p>\n            </div>\n\n            <div className=\"select-container\">\n              <div className=\"icon\">\n                <VirusSvg fill=\"#fff\" />\n              </div>\n\n              <select\n                onChange={(e) => setFilter(e.target.value)}\n                value={filter}\n              >\n                <option value=\"covid\">Covid</option>\n                <option value=\"suspect\">Suspeitos</option>\n                <option value=\"all\">Todos as pessoas</option>\n              </select>\n            </div>\n\n            <button\n              type=\"button\"\n              onClick={() => getNearbUsers()}\n              className=\"search-button\"\n            >\n              <FaSearch color=\"#fff\" size={18} />\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  // Verifica se o usuário está logado\n  if (!session) {\n    return {\n      props: {\n        isAuth: false,\n      },\n    };\n  }\n\n  /*\n   * Verifica se o usuário já cadastrou seu status diario\n   */\n  const currentDate = getCurrentDate();\n\n  const userDailyStatus = await db\n    .collection('users')\n    .doc(session.user.sub)\n    .collection('history')\n    .doc(currentDate)\n    .get();\n\n  const todayRegistered = userDailyStatus.data();\n  if (!todayRegistered) {\n    return {\n      props: {\n        isAuth: true,\n        hasRegisteredDailyStatus: false,\n        user: session.user,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: true,\n      hasRegisteredDailyStatus: true,\n      user: session.user,\n    },\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAPA;AACA;AAFA;AACA;AAYA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}