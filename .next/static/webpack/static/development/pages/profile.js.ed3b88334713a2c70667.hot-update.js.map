{"version":3,"file":"static/webpack/static/development/pages/profile.js.ed3b88334713a2c70667.hot-update.js","sources":["webpack:///./pages/profile.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Router from 'next/router';\n\nimport format from 'date-fns/format';\n\nimport pt from 'date-fns/locale/pt-BR';\n\nimport AppMenu from '../components/AppMenu';\nimport Loading from '../components/Loading';\nimport auth0 from '../lib/auth0';\n\nimport { db } from '../lib/firebase';\n\nimport '../styles/profile.css';\n\nexport default function profile({ user, history, isAuth }) {\n  useEffect(() => {\n    if (!isAuth) Router.push('/');\n  }, [isAuth]);\n\n  if (isAuth) {\n    return (\n      <>\n        <AppMenu user={user} />\n\n        <div className=\"profile-container\">\n          <div className=\"content\">\n            <div className=\"header\">\n              <img src={user.picture} />\n              <h1>{user.name}</h1>\n              <p>Arcos/MG</p>\n            </div>\n\n            <div className=\"symptoms-history\">\n              <h1> Hist√≥rico </h1>\n\n              {history.map((day) => {\n                const dateFormated = format(new Date(day.date), 'dd-LLLL', {\n                  locale: pt,\n                });\n\n                return (\n                  <div className=\"symptom-card\">\n                    <div className=\"day-cirlce\">\n                      <b>{dateFormated.split('-')[0]}</b>\n                      <span>{dateFormated.split('-')[1]} </span>\n                    </div>\n\n                    <div className=\"symptoms\">\n                      <b> {day.status} </b>\n                      <p> {day.symptoms.join(', ')} </p>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"center-content fullscreen\">\n      <Loading />\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    req.user = session.user;\n    const userId = session.user.sub;\n\n    const symptomsHistory = await db\n      .collection('users')\n      .doc(userId)\n      .collection('history')\n      .get();\n\n    const historyList = [];\n\n    symptomsHistory.docs.map((item) => {\n      historyList.push({\n        date: item.id,\n        status: item.data().status,\n        symptoms: item.data().symptoms,\n      });\n    });\n\n    console.log(symptomsHistory.docs);\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        history: historyList,\n      },\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n    },\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AAKA;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}